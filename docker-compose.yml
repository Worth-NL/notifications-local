version: "3.9"
services:
  db:
    image: postgres:11-bullseye
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=notification_api
      - POSTGRES_USER=notify
      - POSTGRES_PASSWORD=notify
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 1s
      retries: 3

  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6380:6379"

  notify-api:
    image: notifications-api
    container_name: notify-api
    volumes:
      - ../notifications-api:/home/vcap/app
    build:
      context: ../notifications-api
      dockerfile: docker/Dockerfile
    ports:
      - "6011:6011"
    command: ["api-local"]
    env_file:
      - local-aws-creds.env
      - notify-api.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      notify-api-db-migration:
        condition: service_started

  notify-api-db-migration:
    image: notifications-api
    container_name: db-migration
    volumes:
      - ../notifications-api:/home/vcap/app
    command: ["migration"]
    env_file:
      - local-aws-creds.env
      - notify-api.env
    depends_on:
      db:
        condition: service_healthy

  notify-api-celery:
    image: notifications-api
    container_name: notify-api-celery
    volumes:
      - ../notifications-api:/home/vcap/app
    command: ["worker"]
    env_file:
      - local-aws-creds.env
      - notify-api.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
 
  notify-api-celery-beat:
    image: notifications-api
    container_name: notify-api-celery-beat
    volumes:
      - ../notifications-api:/home/vcap/app
    command: ["celery-beat"]
    env_file:
      - local-aws-creds.env
      - notify-api.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
 
  notify-admin:
    image: notifications-admin
    container_name: notify-admin
    volumes:
      - ../notifications-admin:/home/vcap/app
    build:
      context: ../notifications-admin
      dockerfile: docker/Dockerfile
      args:
        - NOTIFY_ENVIRONMENT=development
    ports:
      - "6012:6012"
    command: ["flask", "run", "--port", "6012", "--host", "0.0.0.0"]
    env_file:
      - local-aws-creds.env
      - notify-admin.env
    depends_on:
      notify-api:
        condition: service_started

  document-download-api:
    image: document-download-api
    container_name: document-download-api
    volumes:
      - ../document-download-api:/home/vcap/app
    build:
      context: ../document-download-api
      dockerfile: docker/Dockerfile
      args:
        - NOTIFY_ENVIRONMENT=development
    ports:
      - "7000:7000"
    command: ["flask", "run", "-p", "7000", "--host", "0.0.0.0"]
    env_file:
      - local-aws-creds.env
      - document-download-api.env

  document-download-frontend:
    image: document-download-frontend
    container_name: document-download-frontend
    volumes:
      - ../document-download-frontend:/home/vcap/app
    build:
      context: ../document-download-frontend
      dockerfile: docker/Dockerfile
      args:
        - NOTIFY_ENVIRONMENT=development
    ports:
      - "7001:7001"
    command: ["flask", "run", "-p", "7001", "--host", "0.0.0.0"]
    env_file:
      - local-aws-creds.env
      - document-download-frontend.env
